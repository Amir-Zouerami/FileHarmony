{
	"name": "FileHarmony",
	"displayName": "File Harmony",
	"description": "A simple vscode extension to keep two directories in sync",
	"publisher": "zouerami",
	"author": {
		"name": "Amir Zouerami",
		"url": "https://github.com/Amir-Zouerami"
	},
	"version": "2.1.1",
	"engines": {
		"vscode": "^1.54.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"icon": "icon.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/Amir-Zouerami/FileHarmony.git"
	},
	"bugs": {
		"url": "https://github.com/Amir-Zouerami/FileHarmony/issues"
	},
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "fileHarmonyViewContainer",
					"title": "File Harmony",
					"icon": "resources/FH.svg"
				}
			]
		},
		"views": {
			"fileHarmonyViewContainer": [
				{
					"type": "webview",
					"id": "fileHarmonyView",
					"name": "Control Panel"
				}
			]
		},
		"configuration": {
			"title": "File Harmony",
			"properties": {
				"fileHarmony.sourcePath": {
					"type": "string",
					"default": "",
					"description": "The source directory to synchronize from.",
					"scope": "resource"
				},
				"fileHarmony.targetPath": {
					"type": "string",
					"default": "",
					"description": "The target directory to synchronize to.",
					"scope": "resource"
				},
				"fileHarmony.ignoreList": {
					"type": "array",
					"default": [
						"**/node_modules",
						"**/.git",
						"**/.vscode",
						"**/.idea",
						"**/dist"
					],
					"description": "An array of glob patterns for files and directories to ignore during synchronization.",
					"items": {
						"type": "string"
					},
					"scope": "resource"
				},
				"fileHarmony.syncMode": {
					"type": "string",
					"default": "smart",
					"enum": [
						"smart",
						"force"
					],
					"description": "The core strategy for the sync operation. 'smart' compares files before copying, while 'force' overwrites all matching files.",
					"scope": "resource"
				},
				"fileHarmony.conflictResolution": {
					"type": "string",
					"default": "Source Wins",
					"enum": [
						"Source Wins",
						"Target Wins",
						"Log Error and Skip",
						"Ask"
					],
					"description": "Determines the action to take when a conflict is detected in 'smart' sync mode.",
					"scope": "resource"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src",
		"test": "vscode-test"
	},
	"devDependencies": {
		"@types/micromatch": "^4.0.9",
		"@types/mocha": "^10.0.9",
		"@types/node": "20.x",
		"@types/vscode": "^1.54.0",
		"@typescript-eslint/eslint-plugin": "^8.10.0",
		"@typescript-eslint/parser": "^8.7.0",
		"@vscode/test-cli": "^0.0.10",
		"@vscode/test-electron": "^2.4.1",
		"eslint": "^9.13.0",
		"typescript": "^5.6.3"
	},
	"dependencies": {
		"chokidar": "^4.0.1",
		"micromatch": "^4.0.8"
	}
}
